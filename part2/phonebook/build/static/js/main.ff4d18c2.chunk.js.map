{"version":3,"sources":["Components/Filter.js","services/phonebook.js","Components/PersonForm.js","Components/Persons.js","Components/Alert.js","Components/App.js","index.js"],"names":["Filter","filter","handleFilterChange","type","value","onChange","baseUrl","axios","get","then","response","data","obj","post","id","delete","newObj","put","res","PersonForm","addNewName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","Persons","persons","handleDelete","person","RegExp","test","name","map","key","number","onClick","Alert","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","text","setMessage","useEffect","phonebook","e","target","preventDefault","find","window","confirm","updatedPerson","item","catch","error","setTimeout","concat","console","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff4d18c2.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Filter({ filter, handleFilterChange }) {\n  return (\n    <div>\n      filter shown with{\" \"}\n      <input type=\"text\" value={filter} onChange={handleFilterChange} />\n    </div>\n  );\n}\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((response) => response.data);\n};\n\nconst create = (obj) => {\n  return axios.post(baseUrl, obj).then((response) => response.data);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\nconst put = (id, newObj) => {\n  return axios.put(`${baseUrl}/${id}`, newObj).then((res) => res.data);\n};\nexport default { getAll, create, remove, put };\n","import React from \"react\";\n\nfunction PersonForm({\n  addNewName,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) {\n  return (\n    <div>\n      <form onSubmit={addNewName}>\n        <div>\n          name:{\" \"}\n          <input type=\"text\" value={newName} onChange={handleNameChange} />\n        </div>\n\n        <div>\n          number:{\" \"}\n          <input type=\"text\" value={newNumber} onChange={handleNumberChange} />\n        </div>\n\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default PersonForm;\n","import React from \"react\";\n\nfunction Persons({ persons, filter, handleDelete }) {\n  return (\n    <div>\n      {persons\n        .filter((person) => new RegExp(filter, \"i\").test(person.name))\n        .map((person) => (\n          <div key={person.name}>\n            {person.name} {person.number}{\" \"}\n            <button onClick={() => handleDelete(person.id)}>delete</button>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default Persons;\n","import React from \"react\";\nimport \"./Alert.css\";\n\nfunction Alert({ message, type }) {\n  if (message)\n    return (\n      <div className={type}>\n        <h3 className=\"alert\">{message}</h3>\n      </div>\n    );\n  else return null;\n}\n\nexport default Alert;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./Filter\";\nimport phonebook from \"../services/phonebook\";\nimport PersonForm from \"./PersonForm\";\nimport Persons from \"./Persons\";\nimport Alert from \"./Alert\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState({ text: \"\", type: \"\" });\n\n  useEffect(() => {\n    phonebook.getAll().then((data) => setPersons(data));\n  }, [setPersons]);\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleDelete = (id) => {\n    const person = persons.find((person) => person.id === id);\n\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      phonebook\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== id));\n        })\n        .catch(console.error);\n    }\n  };\n  const addNewName = (e) => {\n    e.preventDefault();\n\n    if (!persons.find((person) => person.name === newName)) {\n      const person = { name: newName, number: newNumber };\n\n      phonebook.create(person).then((data) => {\n        setPersons(persons.concat(data));\n      });\n      setMessage({ text: `Added ${newName}`, type: \"success\" });\n      setTimeout(() => {\n        setMessage(\"\");\n      }, 2000);\n    } else if (\n      window.confirm(\n        `${newName} is already added to the phonebook, replace the old number with the new one?`\n      )\n    ) {\n      const person = persons.find((person) => person.name === newName);\n      const updatedPerson = { ...person, number: newNumber };\n\n      phonebook\n        .put(person.id, updatedPerson)\n        .then((data) => {\n          setPersons(\n            persons.map((item) => (item.id === person.id ? data : item))\n          );\n        })\n        .catch((error) => {\n          setMessage({\n            text: `Information for ${newName} has already been removed from the server.`,\n            type: \"error\",\n          });\n          setPersons(persons.filter((person) => person.name !== newName));\n\n          setTimeout(() => {\n            setMessage({});\n          }, 2000);\n        });\n\n      setMessage({ text: `Changed ${newName}`, type: \"success\" });\n      setTimeout(() => {\n        setMessage({});\n      }, 2000);\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Alert message={message.text} type={message.type} />\n\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n\n      <h2>Add a new</h2>\n\n      <PersonForm\n        handleNameChange={handleNameChange}\n        newName={newName}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        addNewName={addNewName}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons filter={filter} persons={persons} handleDelete={handleDelete} />\n\n      {/* <pre style={{ backgroundColor: \"MistyRose\", margin: 30, padding: 10 }}>\n        <code>Debug: {JSON.stringify({ persons }, null, 4)}</code>\n      </pre> */}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}